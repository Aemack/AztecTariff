@page "/SiteTariff"
@using AztecTariff.Data;
@using AztecTariff.Models;
@using AztecTariff.Services;
@using Microsoft.EntityFrameworkCore;
@using Telerik.FontIcons;

@inherits BasePageClass

@inject IDbContextFactory<ApplicationDBContext> DbFactory
@inject Settings settings
@inject NavigationManager nav
@inject PDFDataService pdfdataservice
@inject SalesAreaService saService
@inject PricingService pricingService
@inject IJSRuntime JSRuntime
@inject IWebHostEnvironment WebHostEnvironment
@inject HttpClient HttpClient

@if (isLoading)
{
    <LoadingOverlayComponent></LoadingOverlayComponent>
}

<div class="container-fluid" style="height:100%">
    @*Toast*@
    <div class="position-absolute bottom-0 end-0">
        @*<Toast @ref="Toast"></Toast>*@
    </div>

    <div class="@gridClass" style="height:100vh">

        @*GridTabs*@
        <div class="position-absolute d-flex flex-column" style="top: 25%;left: 150px;width:12pc;">
        <button class="@sitesButtonClass" style="border-radius:20px;" @onclick="@MinimiseSites">Sites</button>
        <button class="@categoryButtonClass" style="border-radius:20px;" @onclick="@MinimiseCategories">Categories</button>
        </div>

        @*List of Sites*@
        <TelerikGrid class="@siteTableClass" Data="@Sites" @ref="SiteGrid"
                     SelectionMode="GridSelectionMode.None"
                     Pageable="false"
                     EditMode="GridEditMode.Popup">

            <GridToolBarTemplate>
                <button class="btn" @onclick="@MinimiseSites"><span class="oi oi-chevron-left" aria-hidden="true"></span></button>
                <label>Sites</label>
            </GridToolBarTemplate>

            <RowTemplate Context="site">
                <td class="k-table-td row">
                    <div class="row p-2">
                        @if (SelectedSites.Contains(site))
                        {
                            <div @onclick="@(() => SiteChevronClicked(site))" class="col" style="cursor:pointer;">
                                <TelerikFontIcon class="openchevron" Icon="@FontIcon.ChevronUp"></TelerikFontIcon>
                            </div>
                        }
                        else
                        {
                            <div @onclick="@(() => SiteChevronClicked(site))" class="col" style="cursor:pointer;">
                                <TelerikFontIcon class="closedchevron" Icon="@FontIcon.ChevronUp"></TelerikFontIcon>
                            </div>
                        }

                        <span class="col-10">@site.SiteName</span>
                    </div>
                    @{
                        subRowCount = 0;
                    }
                    @if (SelectedSites.Contains(site))
                    {
                        <TelerikGrid class="col p-0 grid-no-scroll" Data="@site.SalesAreas" @ref="SAGrid"
                                     SelectionMode="GridSelectionMode.None"
                                     EditMode="GridEditMode.Popup"
                                     Pageable="false"
                                     Context="context">

                            <GridSettings>
                                <GridPopupEditSettings MaxHeight="95vh" MaxWidth="95vw"></GridPopupEditSettings>
                                <GridPopupEditFormSettings ColumnSpacing="20px" Orientation="@FormOrientation.Horizontal" Columns="2">
                                    <FormTemplate>
                                        @{
                                            EditSA = context.Item as FullSalesArea;
                                            <TelerikForm Model="@EditSA" OnValidSubmit="@OnValidSubmit">
                                                <FormItems>
                                                    <FormItem Field="TariffName" LabelText="Tariff Name"></FormItem>
                                                    <FormItem Field="HeaderMessage" LabelText="Header Message"></FormItem>
                                                    <FormItem Field="FooterMessage" LabelText="Footer Message"></FormItem>
                                                </FormItems>
                                                <FormButtons>
                                                    <TelerikButton Icon="@nameof(FontIcon.Save)" OnClick="SaveSalesArea">Save</TelerikButton>
                                                    <TelerikButton Icon="@nameof(FontIcon.Cancel)" OnClick="CloseModal" ButtonType="@ButtonType.Button">Cancel</TelerikButton>
                                                </FormButtons>
                                            </TelerikForm>
                                        }
                                    </FormTemplate>
                                </GridPopupEditFormSettings>
                            </GridSettings>

                            <RowTemplate>
                                @{
                                    var b = (FullSalesArea)context;
                                    <Animate Animation=Animations.SlideDown>
                                        <div class="row w-100">
                                            <div style="cursor:pointer;" class="m-auto p-0 col d-flex justify-content-center align-items-center" @onclick="@(() => EditSalesArea(b))">
                                                <TelerikFontIcon class="m-auto" Icon="@FontIcon.Pencil"></TelerikFontIcon>
                                            </div>
                                            <span class="col-4" style="font-size: 14px;" @onclick="@(() => SalesAreaSelected(b))">@b.SalesAreaName</span>
                                            <span class="col-5" style="font-size: 14px;" @onclick="@(() => SalesAreaSelected(b))">@b.TariffName</span>
                                            <div style="cursor:pointer;" class="m-auto p-0 col d-flex justify-content-center align-items-center" @onclick="@(() => AddEventPricing(b))">
                                                <TelerikFontIcon class="m-auto" Icon="@FontIcon.Plus"></TelerikFontIcon>
                                            </div>

                                        </div>
                                    </Animate>
                                    @if (b.Events.Any())
                                    {
                                        <TelerikGrid Data="@b.Events" Context="tevent">
                                            <RowTemplate>
                                                <Animate Animation=Animations.SlideDown>
                                                    <div class="row w-100 eventrow">
                                                        <div class="m-auto p-0 col"></div>
                                                        <div style="cursor:pointer;" class="m-auto p-0 col d-flex justify-content-center align-items-center" @onclick="@(() => EditSalesArea(tevent))">
                                                            <TelerikFontIcon class="m-auto" Icon="@FontIcon.Pencil"></TelerikFontIcon>
                                                        </div>

                                                        <span class="col-4" style="font-size: 14px;" @onclick="@(() => SalesAreaSelected(tevent))">@tevent.SalesAreaName</span>
                                                        <span class="col-5" style="font-size: 14px;" @onclick="@(() => SalesAreaSelected(tevent))">@tevent.TariffName</span>
                                                        <div style="cursor:pointer;" class="m-auto p-0 col d-flex justify-content-center align-items-center" @onclick="@(() => RemoveEventPricing(tevent))">
                                                            <TelerikFontIcon class="m-auto" Icon="@FontIcon.Minus"></TelerikFontIcon>
                                                        </div>

                                                    </div>
                                                </Animate>
                                            </RowTemplate>
                                        </TelerikGrid>
                                    }
                                }
                            </RowTemplate>
                        </TelerikGrid>
                    }
                </td>
            </RowTemplate>
            @*<GridColumns>
                <GridColumn Field="Name" Title="Site" />
            </GridColumns>*@
        </TelerikGrid>

        @*List by cats*@
        <TelerikGrid class="@categoryTableClass" Data="SelectedSalesArea.Categories" @ref="CatGrid"
                     SelectionMode="GridSelectionMode.None"
                     Pageable="false"
                     
                     OnRowDrop="@((GridRowDropEventArgs<FullCategory> args) => CategoryMoved(args))"
                     EditMode="@GridEditMode.Popup">

            <GridToolBarTemplate>
                <button class="btn" @onclick="@MinimiseCategories"><span class="oi oi-chevron-left" aria-hidden="true"></span></button>
                <label>Categories</label>
            </GridToolBarTemplate>

            <RowTemplate Context="category">
                <td class="k-table-td row ">
                    <div class="row p-2 align-items-center">
                        @if (SelectedCategories.Contains(category))
                        {
                            <div class="col" style="cursor:pointer;" @onclick="@(() => CategoryChevronClicked(category))">
                                <TelerikFontIcon class="openchevron" Icon="@FontIcon.ChevronUp"></TelerikFontIcon>
                            </div>
                        }
                        else
                        {
                            <div class="col" style="cursor:pointer;" @onclick="@(() => CategoryChevronClicked(category))">
                                <TelerikFontIcon class="closedchevron" Icon="@FontIcon.ChevronUp"></TelerikFontIcon>
                            </div>
                        }

                        <span class="col-7 m-auto">@category.TariffCategory</span>

                        @if (category.Products.Count != 0)
                        {
                            <TelerikToggleButton @bind-Selected="@category.IsSummarized" Class="col-3 m-auto"
                                                 Title="Summarize"
                                                 
                                                 OnClick="@(() => SummarizeCategoryToggle(category))">
                                                 @(category.IsSummarized ? "Summarized" : "Summarize")
                            </TelerikToggleButton>

                            <input class="col m-auto" @bind="@category.AllSelected" type="checkbox" style="height:15px;" @onclick="@(() => CategoryCheckboxClicked(category))" />   
                        }
                        else
                        {
                            <TelerikToggleButton Class="col-3 m-auto"
                                                 Title="Summarize"
                                                 Enabled=false>
                                @(category.IsSummarized ? "Summarized" : "Summarize")
                            </TelerikToggleButton>
                            <input class="col m-auto" @bind="@category.AllSelected" type="checkbox" style="height:15px;" disabled />
                        }
                    </div>
                    @{
                        subRowCount = 0;
                    }
                    @if (SelectedCategories.Contains(category))
                    {
                        <TelerikGrid class="col p-0 grid-no-scroll" Data="category.IncludedProducts" @ref="ProdGrid"
                                     SelectionMode="GridSelectionMode.None"
                                     Pageable="false"
                                     EditMode="@GridEditMode.Popup"
                                     OnRowDrop="@((GridRowDropEventArgs<FullProduct> args) => ProductMoved(args))">

                            <GridSettings>
                                <GridPopupEditSettings MaxHeight="95vh" MaxWidth="95vw"></GridPopupEditSettings>
                                <GridPopupEditFormSettings ColumnSpacing="20px" Orientation="@FormOrientation.Horizontal" Columns="2">
                                    <FormTemplate>
                                        @{
                                            EditFullProduct = context.Item as FullProduct;

                                            <TelerikForm Model="@EditFullProduct" OnValidSubmit="@OnValidSubmit">
                                                <FormItems>
                                                    <div class="d-flex align-items-center justify-content-center"><i>@EditFullProduct.ProdName</i></div>
                                                    <FormItem Field="Price" LabelText="Price"></FormItem>
                                                </FormItems>
                                                <FormButtons>
                                                    <TelerikButton Icon="@nameof(FontIcon.Save)" OnClick="SaveProduct">Save</TelerikButton>
                                                    <TelerikButton Icon="@nameof(FontIcon.Cancel)" OnClick="CancelEditProduct" ButtonType="@ButtonType.Button">Cancel</TelerikButton>
                                                </FormButtons>
                                            </TelerikForm>
                                        }
                                    </FormTemplate>
                                </GridPopupEditFormSettings>
                            </GridSettings>
                            <GridColumns>
                                <GridColumn>
                                    <Template>
                                        @{
                                            var b = (FullProduct)context;

                                            <div class="row ">

                                                <div style="cursor:pointer;" @onclick="@(() => EditProduct(b))" class="m-auto p-0 col d-flex justify-content-center align-items-center">
                                                    <TelerikFontIcon class="m-auto" Icon="@FontIcon.Pencil"></TelerikFontIcon>
                                                </div>
                                                <div class="m-auto p-0 col d-flex justify-content-center align-items-ceter">
                                                    <p class="m-auto">@b.ProductTariffName</p>
                                                </div>
                                                <div class="m-auto p-0 col d-flex justify-content-center align-items-ceter">
                                                    <p class="m-auto">£@b.Price.ToString("0.00")</p>
                                                </div>
                                                <div class="m-auto p-0 col d-flex justify-content-center align-items-ceter">
                                                    <input class="col m-auto" @bind="b.IncludeInPDF" type="checkbox" style="height:15px;" @onclick="@(() => ProductCheckboxClicked(b))" />
                                                </div>

                                            </div>
                                        }

                                    </Template>
                                </GridColumn>
                            </GridColumns>
                        </TelerikGrid>
                    }
                </td>
            </RowTemplate>
        </TelerikGrid>


        @*PDF Viewer*@
        <TelerikPdfViewer class="col p-0 pdfviewer"
                          Zoom=1m
                          Data="@PdfSource">
            <PdfViewerToolBar>




                <PdfViewerToolBarSpacer />
                <PdfViewerToolBarSeparator />

                <PdfViewerToolBarDownloadTool />
                <PdfViewerToolBarPrintTool />
                <PdfViewerToolBarZoomTool />
                <PdfViewerToolBarSelectionTool />
                <PdfViewerToolBarSearchTool />

                <PdfViewerToolBarCustomTool>
                    <label>Include ABV</label>
                    <TelerikCheckBox @bind-Value="@includeAbv" OnChange="IncludeABVChanged"></TelerikCheckBox>
                </PdfViewerToolBarCustomTool>

                <PdfViewerToolBarCustomTool>
                    <label>Template Options</label>
                    <TelerikDropDownList OnClose="@TemplateChanged" Data="@templateChoices" @bind-Value="selectedTemplate">
                    </TelerikDropDownList>
                </PdfViewerToolBarCustomTool>

                <PdfViewerToolBarCustomTool>
                    <button class="btn" onclick="@ExportMultipleClicked">Export Mulitple</button>
                </PdfViewerToolBarCustomTool>
                <PdfViewerToolBarCustomTool>
                    <button class="btn" onclick="@PrintMultipleClicked">Print Multiple</button>
                </PdfViewerToolBarCustomTool>

            </PdfViewerToolBar>
        </TelerikPdfViewer>
    </div>
</div>

<TelerikWindow Modal="true"
@bind-Visible="@isAddEventModalVisible"
               CloseOnOverlayClick="true">
    <WindowTitle>
        Add Event Pricing
    </WindowTitle>
    <WindowContent>

        <EditForm Model="@eventSAModel">
            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Event Tariff Name</label>
                <InputText @bind-Value="eventSAModel.TariffName" />
            </TelerikStackLayout>

            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Event Header Message</label>
                <InputText @bind-Value="eventSAModel.HeaderMessage" />
            </TelerikStackLayout>

            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Event Footer Message</label>
                <InputText @bind-Value="eventSAModel.FooterMessage" />
            </TelerikStackLayout>

            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Base Price Multiplier</label>
                <InputNumber @bind-Value="basePriceMultiplier" />
            </TelerikStackLayout>

            <TelerikButton OnClick="SaveEventPricing">Add</TelerikButton>
        </EditForm>

    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

<TelerikWindow Modal="true"
@bind-Visible="@isMultiExportVisible"
               CloseOnOverlayClick="true">
    <WindowTitle>
        Select Sales Areas To Export
    </WindowTitle>
    <WindowContent>

        <TelerikGrid Data="@ExportableSalesAreas" Context="context" SelectedItems="@SelectedSalesAreas" SelectionMode="GridSelectionMode.Multiple">


            <RowTemplate>
                @{
                    var b = (FullPDFData)context;
                    <div class="container">
                        <div class="row">
                            <label class="col-3">@b.SalesArea.TariffName</label>
                            <label class="col-3">@b.SalesArea.SAName</label>
                            <label class="col-3">@b.SalesArea.SiteName</label>
                            <label class="col-2">@b.PDFData.CreatedDate.ToShortDateString()</label>

                            <input type="checkbox" @bind=b.Selected class="col" />
                        </div>
                    </div>
                }
            </RowTemplate>

        </TelerikGrid>
        <button @onclick="@ExportFromMultiple">Export</button>
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

<TelerikWindow Modal="true"
@bind-Visible="@isMultiPrintVisible"
               CloseOnOverlayClick="true">
    <WindowTitle>
        Select Sales Areas To Export
    </WindowTitle>
    <WindowContent>

        <TelerikGrid Data="@ExportableSalesAreas" Context="context" SelectedItems="@SelectedSalesAreas" SelectionMode="GridSelectionMode.Multiple">


            <RowTemplate>
                @{
                    var b = (FullPDFData)context;
                    <div class="container">
                        <div class="row">
                            <label class="col-3">@b.SalesArea.TariffName</label>
                            <label class="col-3">@b.SalesArea.SAName</label>
                            <label class="col-3">@b.SalesArea.SiteName</label>
                            <label class="col-2">@b.PDFData.CreatedDate.ToShortDateString()</label>

                            <input type="checkbox" @bind=b.Selected class="col" />
                        </div>
                    </div>
                }
            </RowTemplate>

        </TelerikGrid>
        <button @onclick="@PrintMultiplePDF">Print</button>
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

<TelerikWindow Modal="true" @bind-Visible="@isDeleteEventModalVisible" CloseOnOverlayClick="true">
    <WindowTitle>
        Remove Event
    </WindowTitle>
    <WindowContent>
        <EditForm Model="@eventModel">
            <p>Are you sure you want to delete @eventModel.TariffName</p>
            <TelerikButton @onclick="@(() => ConfirmRemoveEventPricing(eventModel))">Delete</TelerikButton>
            <TelerikButton OnClick="CloseModal">Cancel</TelerikButton>
        </EditForm>
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

<TelerikWindow Modal="true"
@bind-Visible="@isAddSummaryModalVisible"
               CloseOnOverlayClick="true">
    <WindowTitle>
        Add Category Summary
    </WindowTitle>
    <WindowContent>

        <EditForm Model="@summaryModel">
            <div class="d-flex justify-content-center">
            <label>@summaryModel.Category</label>
            </div>

            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Max Price</label>
                <InputNumber @bind-Value="summaryModel.MaxPrice" />
            </TelerikStackLayout>

            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Min Price</label>
                <InputNumber @bind-Value="summaryModel.MinPrice" />
            </TelerikStackLayout>

            <TelerikStackLayout Orientation="StackLayoutOrientation.Horizontal">
                <label>Summary descrption</label>
                <InputText @bind-Value="summaryModel.SummaryDescription" />
            </TelerikStackLayout>


            <TelerikButton OnClick="SaveCategorySummary">Add</TelerikButton>
        </EditForm>

    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>